----------path is <ref *1> NodePath {
  contexts: [
    TraversalContext {
      queue: [Array],
      priorityQueue: [],
      parentPath: [NodePath],
      scope: [Scope],
      state: undefined,
      opts: [Object]
    }
  ],
  state: undefined,
  opts: {
    Program: { enter: [Array] },
    TemplateLiteral: { enter: [Array] },
    _exploded: true,
    _verified: true
  },
  _traverseFlags: 0,
  skipKeys: null,
  parentPath: NodePath {
    contexts: [ [TraversalContext] ],
    state: undefined,
    opts: {
      Program: [Object],
      TemplateLiteral: [Object],
      _exploded: true,
      _verified: true
    },
    _traverseFlags: 0,
    skipKeys: null,
    parentPath: NodePath {
      contexts: [Array],
      state: undefined,
      opts: [Object],
      _traverseFlags: 0,
      skipKeys: null,
      parentPath: [NodePath],
      container: [Array],
      listKey: 'body',
      key: 0,
      node: [Node],
      type: 'VariableDeclaration',
      parent: [Node],
      hub: undefined,
      data: null,
      context: [TraversalContext],
      scope: [Scope]
    },
    container: [ [Node] ],
    listKey: 'declarations',
    key: 0,
    node: Node {
      type: 'VariableDeclarator',
      start: 6,
      end: 58,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    type: 'VariableDeclarator',
    parent: Node {
      type: 'VariableDeclaration',
      start: 0,
      end: 59,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    hub: undefined,
    data: null,
    context: TraversalContext {
      queue: [Array],
      priorityQueue: [],
      parentPath: [NodePath],
      scope: [Scope],
      state: undefined,
      opts: [Object]
    },
    scope: Scope {
      uid: 0,
      path: [NodePath],
      block: [Node],
      labels: Map(0) {},
      inited: true,
      bindings: [Object: null prototype],
      references: [Object: null prototype],
      globals: [Object: null prototype],
      uids: [Object: null prototype] {},
      data: [Object: null prototype] {},
      crawling: false
    }
  },
  container: Node {
    type: 'VariableDeclarator',
    start: 6,
    end: 58,
    loc: SourceLocation {
      start: [Position],
      end: [Position],
      filename: undefined,
      identifierName: undefined
    },
    id: Node {
      type: 'Identifier',
      start: 6,
      end: 24,
      loc: [SourceLocation],
      name: 'myTypescriptString'
    },
    init: Node {
      type: 'TemplateLiteral',
      start: 34,
      end: 58,
      loc: [SourceLocation],
      expressions: [Array],
      quasis: [Array],
      leadingComments: [Array]
    }
  },
  listKey: undefined,
  key: 'init',
  node: Node {
    type: 'TemplateLiteral',
    start: 34,
    end: 58,
    loc: SourceLocation {
      start: [Position],
      end: [Position],
      filename: undefined,
      identifierName: undefined
    },
    expressions: [ [Node] ],
    quasis: [ [Node], [Node] ],
    leadingComments: [ [Object] ]
  },
  type: 'TemplateLiteral',
  parent: Node {
    type: 'VariableDeclarator',
    start: 6,
    end: 58,
    loc: SourceLocation {
      start: [Position],
      end: [Position],
      filename: undefined,
      identifierName: undefined
    },
    id: Node {
      type: 'Identifier',
      start: 6,
      end: 24,
      loc: [SourceLocation],
      name: 'myTypescriptString'
    },
    init: Node {
      type: 'TemplateLiteral',
      start: 34,
      end: 58,
      loc: [SourceLocation],
      expressions: [Array],
      quasis: [Array],
      leadingComments: [Array]
    }
  },
  hub: undefined,
  data: null,
  context: TraversalContext {
    queue: [ [Circular *1] ],
    priorityQueue: [],
    parentPath: NodePath {
      contexts: [Array],
      state: undefined,
      opts: [Object],
      _traverseFlags: 0,
      skipKeys: null,
      parentPath: [NodePath],
      container: [Array],
      listKey: 'declarations',
      key: 0,
      node: [Node],
      type: 'VariableDeclarator',
      parent: [Node],
      hub: undefined,
      data: null,
      context: [TraversalContext],
      scope: [Scope]
    },
    scope: Scope {
      uid: 0,
      path: [NodePath],
      block: [Node],
      labels: Map(0) {},
      inited: true,
      bindings: [Object: null prototype],
      references: [Object: null prototype],
      globals: [Object: null prototype],
      uids: [Object: null prototype] {},
      data: [Object: null prototype] {},
      crawling: false
    },
    state: undefined,
    opts: {
      Program: [Object],
      TemplateLiteral: [Object],
      _exploded: true,
      _verified: true
    }
  },
  scope: <ref *2> Scope {
    uid: 0,
    path: NodePath {
      contexts: [Array],
      state: undefined,
      opts: [Object],
      _traverseFlags: 0,
      skipKeys: null,
      parentPath: null,
      container: [Node],
      listKey: undefined,
      key: 'program',
      node: [Node],
      type: 'Program',
      parent: [Node],
      hub: undefined,
      data: null,
      context: [TraversalContext],
      scope: [Circular *2]
    },
    block: Node {
      type: 'Program',
      start: 0,
      end: 100,
      loc: [SourceLocation],
      sourceType: 'script',
      interpreter: null,
      body: [Array],
      directives: []
    },
    labels: Map(0) {},
    inited: true,
    bindings: [Object: null prototype] {
      myTypescriptString: [Binding],
      newString: [Binding]
    },
    references: [Object: null prototype] {
      myTypescriptString: true,
      newString: true
    },
    globals: [Object: null prototype] { myText: [Node] },
    uids: [Object: null prototype] {},
    data: [Object: null prototype] {},
    crawling: false
  }
}
----------path is <ref *1> NodePath {
  contexts: [
    TraversalContext {
      queue: [Array],
      priorityQueue: [],
      parentPath: [NodePath],
      scope: [Scope],
      state: undefined,
      opts: [Object]
    }
  ],
  state: undefined,
  opts: {
    Program: { enter: [Array] },
    TemplateLiteral: { enter: [Array] },
    _exploded: true,
    _verified: true
  },
  _traverseFlags: 0,
  skipKeys: null,
  parentPath: NodePath {
    contexts: [ [TraversalContext] ],
    state: undefined,
    opts: {
      Program: [Object],
      TemplateLiteral: [Object],
      _exploded: true,
      _verified: true
    },
    _traverseFlags: 0,
    skipKeys: null,
    parentPath: NodePath {
      contexts: [Array],
      state: undefined,
      opts: [Object],
      _traverseFlags: 0,
      skipKeys: null,
      parentPath: [NodePath],
      container: [Array],
      listKey: 'body',
      key: 1,
      node: [Node],
      type: 'VariableDeclaration',
      parent: [Node],
      hub: undefined,
      data: null,
      context: [TraversalContext],
      scope: [Scope]
    },
    container: [ [Node] ],
    listKey: 'declarations',
    key: 0,
    node: Node {
      type: 'VariableDeclarator',
      start: 65,
      end: 100,
      loc: [SourceLocation],
      id: [Node],
      init: [Node]
    },
    type: 'VariableDeclarator',
    parent: Node {
      type: 'VariableDeclaration',
      start: 59,
      end: 100,
      loc: [SourceLocation],
      declarations: [Array],
      kind: 'const'
    },
    hub: undefined,
    data: null,
    context: TraversalContext {
      queue: [Array],
      priorityQueue: [],
      parentPath: [NodePath],
      scope: [Scope],
      state: undefined,
      opts: [Object]
    },
    scope: Scope {
      uid: 0,
      path: [NodePath],
      block: [Node],
      labels: Map(0) {},
      inited: true,
      bindings: [Object: null prototype],
      references: [Object: null prototype],
      globals: [Object: null prototype],
      uids: [Object: null prototype] {},
      data: [Object: null prototype] {},
      crawling: false
    }
  },
  container: Node {
    type: 'VariableDeclarator',
    start: 65,
    end: 100,
    loc: SourceLocation {
      start: [Position],
      end: [Position],
      filename: undefined,
      identifierName: undefined
    },
    id: Node {
      type: 'Identifier',
      start: 65,
      end: 74,
      loc: [SourceLocation],
      name: 'newString'
    },
    init: Node {
      type: 'TemplateLiteral',
      start: 77,
      end: 100,
      loc: [SourceLocation],
      expressions: [],
      quasis: [Array]
    }
  },
  listKey: undefined,
  key: 'init',
  node: Node {
    type: 'TemplateLiteral',
    start: 77,
    end: 100,
    loc: SourceLocation {
      start: [Position],
      end: [Position],
      filename: undefined,
      identifierName: undefined
    },
    expressions: [],
    quasis: [ [Node] ]
  },
  type: 'TemplateLiteral',
  parent: Node {
    type: 'VariableDeclarator',
    start: 65,
    end: 100,
    loc: SourceLocation {
      start: [Position],
      end: [Position],
      filename: undefined,
      identifierName: undefined
    },
    id: Node {
      type: 'Identifier',
      start: 65,
      end: 74,
      loc: [SourceLocation],
      name: 'newString'
    },
    init: Node {
      type: 'TemplateLiteral',
      start: 77,
      end: 100,
      loc: [SourceLocation],
      expressions: [],
      quasis: [Array]
    }
  },
  hub: undefined,
  data: null,
  context: TraversalContext {
    queue: [ [Circular *1] ],
    priorityQueue: [],
    parentPath: NodePath {
      contexts: [Array],
      state: undefined,
      opts: [Object],
      _traverseFlags: 0,
      skipKeys: null,
      parentPath: [NodePath],
      container: [Array],
      listKey: 'declarations',
      key: 0,
      node: [Node],
      type: 'VariableDeclarator',
      parent: [Node],
      hub: undefined,
      data: null,
      context: [TraversalContext],
      scope: [Scope]
    },
    scope: Scope {
      uid: 0,
      path: [NodePath],
      block: [Node],
      labels: Map(0) {},
      inited: true,
      bindings: [Object: null prototype],
      references: [Object: null prototype],
      globals: [Object: null prototype],
      uids: [Object: null prototype] {},
      data: [Object: null prototype] {},
      crawling: false
    },
    state: undefined,
    opts: {
      Program: [Object],
      TemplateLiteral: [Object],
      _exploded: true,
      _verified: true
    }
  },
  scope: <ref *2> Scope {
    uid: 0,
    path: NodePath {
      contexts: [Array],
      state: undefined,
      opts: [Object],
      _traverseFlags: 0,
      skipKeys: null,
      parentPath: null,
      container: [Node],
      listKey: undefined,
      key: 'program',
      node: [Node],
      type: 'Program',
      parent: [Node],
      hub: undefined,
      data: null,
      context: [TraversalContext],
      scope: [Circular *2]
    },
    block: Node {
      type: 'Program',
      start: 0,
      end: 100,
      loc: [SourceLocation],
      sourceType: 'script',
      interpreter: null,
      body: [Array],
      directives: []
    },
    labels: Map(0) {},
    inited: true,
    bindings: [Object: null prototype] {
      myTypescriptString: [Binding],
      newString: [Binding]
    },
    references: [Object: null prototype] {
      myTypescriptString: true,
      newString: true
    },
    globals: [Object: null prototype] { myText: [Node] },
    uids: [Object: null prototype] {},
    data: [Object: null prototype] {},
    crawling: false
  }
}
